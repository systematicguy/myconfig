- name: check if already downloaded
  stat:
    path: "{{ dest }}"
    get_checksum: false
  register: downloaded_path_info

- name: Ensure fresh download
  when: needs_download
  block:
    - name: ensure parent directory exists
      file:
        path: "{{ download_dir }}"
        state: directory

    - name: clean checksum file if found downloaded file is too old
      file:
        path: "{{ checksum_path }}"
        state: absent

    - name: download file
      get_url:
        url: "{{ url }}"
        dest: "{{ dest }}"
      register: new_downloaded_path_info

- name: check if checksum file exists
  stat:
    path: "{{ checksum_path }}"
    get_checksum: false
  register: checksum_path_info

- name: Ensure checksum file
  when: not checksum_path_info.stat.exists
  block:
    - name: Calculate checksum of downloaded file
      stat:
        path: "{{ dest }}"
        get_checksum: true
        checksum_algorithm: "{{ checksum_algorithm }}"
      register: new_downloaded_path_info

    - name: Store checksum of downloaded file
      copy:
        content: "{{ new_downloaded_path_info.stat.checksum }}"
        dest: "{{ checksum_path }}"

    - name: Set freshly calculated checksum as fact
      set_fact:
        downloaded_checksum: "{{ new_downloaded_path_info.stat.checksum }}"

- name: Set already stored checksum as fact
  when: checksum_path_info.stat.exists
  set_fact:
    downloaded_checksum: "{{ lookup('file', checksum_path) }}"

- name: set downloaded path as fact
  set_fact:
    downloaded_path: "{{ dest }}"

- name: Fail if downloaded checksum is not the expected checksum
  when: expected_checksum != "" and expected_checksum != downloaded_checksum
  fail:
    msg: |
      Checksum of downloaded file does not match expected checksum.
      Expected: {{ expected_checksum }}
      Actual: {{ downloaded_checksum }}